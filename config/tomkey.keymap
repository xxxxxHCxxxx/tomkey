#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &kp E         &kp R                  &kp T                                                 &kp Y        &kp U  &lt 2 I    &kp O    &kp P
&kp A             &kp S             &kp D         &kp F                  &kp G        &mo 6                 &kp BACKSLASH      &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X             &kp C         &kp V                  &kp B        &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp N        &kp M  &kp COMMA  &kp DOT  &lt 3 SLASH
&kp LEFT_CONTROL  &kp LEFT_COMMAND  &kp LEFT_ALT  &lt 6 INTERNATIONAL_4  &lt 4 SPACE  &lt 3 CLCK            &kp BACKSPACE      &lt 5 ENTER                             &kp DELETE
            >;
        };

        MOUSE {
            bindings = <
&trans     &trans        &trans            &trans          &trans                      &trans  &trans    &trans    &trans    &trans
&trans     &trans        &trans            &trans          &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans     &trans        &trans            &trans          &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans  &trans      &trans  &mo 3                                 &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans    &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB2  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans    &trans    &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        ARROW {
            bindings = <
&kp GRAVE  &kp LC(LS(TAB))         &kp LG(RIGHT)   &kp NUMBER_9             &kp NUMBER_0                           &trans  &kp RC(LEFT_ARROW)  &kp UP_ARROW      &kp RC(RIGHT_ARROW)  &kp LG(P)
&kp TAB    &kp LA(LG(LEFT_ARROW))  &kp LG(LEFT)    &kp LG(LA(RIGHT_ARROW))  &kp LEFT_BRACKET   &trans      &trans  &trans  &kp LEFT_ARROW      &kp DOWN_ARROW    &kp RIGHT_ARROW      &kp LG(K)
&kp LCMD   &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp RIGHT_BRACKET  &trans      &trans  &trans  &trans              &kp LC(UP_ARROW)  &trans               &kp LG(L)
&trans     &trans                  &kp LEFT_SHIFT  &trans                   &trans             &trans      &trans  &trans                                                             &trans
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION       &kp AT_SIGN            &kp POUND  &kp LS(LG(NUMBER_4))  &kp PRCNT                                    &kp BACKSLASH    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SEMICOLON
&kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &kp UNDERSCORE        &kp PLUS       &kp EQUAL             &trans  &kp EXCLAMATION  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SQT
&kp COLON             &kp SEMICOLON          &kp SQT    &kp DOUBLE_QUOTES     &kp LESS_THAN  &kp GREATER_THAN      &trans  &kp NUMBER_0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&kp LEFT_SHIFT        &trans                 &trans     &trans                &trans         &trans                &trans  &kp LEFT_SHIFT                                             &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp LA(LG(U))     &kp LA(LC(J))  &kp LA(LC(I))       &kp LA(LC(K))        &kp LA(LC(ENTER))                                    &kp F1        &kp F2                &kp F3  &kp F4  &kp F5
&kp LA(LC(A))     &kp LA(LC(S))  &kp LA(LC(D))       &kp LA(LC(Q))        &kp LA(LC(R))      &kp LA(LC(E))      &kp F13        &kp F6        &kp F7                &kp F8  &kp F9  &kp F10
&trans            &trans         &trans              &trans               &trans             &trans             &kp RG(MINUS)  &kp RG(PLUS)  &kp RS(RG(NUMBER_4))  &trans  &trans  &kp F11
&kp LC(UP_ARROW)  &kp LC(DOWN)   &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp LG(W)          &kp LG(R)          &kp RG(N0)     &trans                                              &kp F12
            >;
        };

        layer_6 {
            bindings = <
&kp LG(Q)      &kp LC(W)  &trans     &trans     &trans                            &bt BT_PRV      &bt BT_NXT  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LG(LS(Z))  &trans     &kp LC(C)  &trans     &trans  &trans      &trans        &trans          &trans      &trans        &trans        &trans
&kp LG(Z)      &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans  &trans      &mmv MOVE_UP  &mmv MOVE_DOWN  &trans      &trans        &trans        &bt BT_CLR
&trans         &trans     &trans     &trans     &trans  &trans      &trans        &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
